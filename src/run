#!/bin/sh

# run project
#   -proj abs path to top level build directory
#   -exe  executable file name
#               attempts to find exe by premissions
#   [rest] is args to executable

FILE=/usr/local/etc/build_files/project_dirs

indirection () {
    # indirection for POSIX, for bash have ${!var} but cannot use in POSIX
    # Note: \ are removed from echo'd value
    
    local line name value

    set | \
    while read line; do
        name=${line%=*} value=${line#*=\'}
        if [ "$name" = "$1" ]; then
            echo ${value%\'}
        fi
    done
}

fancy_print() {
    # print message with options
    # NOTE: order of - options dont matter, text must be last 
    #   -c (RED,CYAN)
    #   -m print in middle of screen
    #   text to print

    local RED YELLOW CYAN m color text cols

    RED='\033[1;31m'
    YELLOW='\033[1;33m'
    CYAN='\033[1;36m'

    while true; do
        case "$1" in
            -m) m=" "; shift 1;;
            -c) color="$2"; shift 2;;
            *) text="$1"; break;;
        esac
    done

    printf "\\$(indirection $color)"
    if [ ! "$m" = "" ]; then
        cols=$((($(tput cols) / 2) - (${#text} / 2)))
        printf "%0.s " $(seq 1 $cols)
    fi
    printf "$text\033[0m"
}

find_proj() {
    # find path to build artifacts with associated project
    #   $1 corresponing project name taken from full path

    local found line build_dir

    # NOTE: duplicated logic from build

    found=$(grep -n "$1" "$FILE")
    if [ "$found" != "" ]; then
        line=$(echo $found | sed 's/:.*//')
        build_dir=$(head -n "$line" "$FILE" | tail -1 | awk '{print $2}')
        echo "$build_dir"
        return 0
    fi

    echo ""
    return 1
}

while [ "$#" -ne 0 ]; do
    case "$1" in
        -proj=*) project_dir="${1#*=}";;
        -exe=*) exe="${1#*=}";;
        *) break;;
    esac

    shift
done

if [ ! -d "$project_dir" ]; then
    fancy_print -c RED "[Error Fatal] " >&2
    >&2 echo "must specify top level project directory as absolute path"
    
    exit 1
fi

proj_build_dir=$(echo "$project_dir" | sed 's_/$__;s_^/__;s_/_-_g')

build_dir=$(find_proj "$proj_build_dir") # path to build files

if [ "$exe" = "" ]; then
    fancy_print -c RED "[Error Fatal] " >&2
    >&2 echo "must specify exe"
    
    exit 1
fi

fancy_print -c CYAN "[Info] "
echo "running $build_dir/$exe"

fancy_print -m -c CYAN "output below"
printf "\n" 

$build_dir/$exe $@ 